.\" Automatically generated by Pod::Man 4.12 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Dancer2 3"
.TH Dancer2 3 "2022-03-14" "perl v5.30.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Dancer2 \- Lightweight yet powerful web application framework
.SH "VERSION"
.IX Header "VERSION"
version 0.400000
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Dancer2 is the new generation of Dancer, the lightweight web-framework for
Perl. Dancer2 is a complete rewrite based on Moo.
.PP
Dancer2 can optionally use \s-1XS\s0 modules for speed, but at its core remains
fatpackable (packable by App::FatPacker) so you could easily deploy Dancer2
applications on hosts that do not support custom \s-1CPAN\s0 modules.
.PP
Dancer2 is easy and fun:
.PP
.Vb 3
\&    use Dancer2;
\&    get \*(Aq/\*(Aq => sub { "Hello World" };
\&    dance;
.Ve
.PP
This is the main module for the Dancer2 distribution. It contains logic for
creating a new Dancer2 application.
.SS "Documentation Index"
.IX Subsection "Documentation Index"
Documentation on Dancer2 is split into several sections. Below is a
complete outline on where to go for help.
.IP "\(bu" 4
Dancer2 Tutorial
.Sp
If you are new to the Dancer approach, you should start by reading
our Dancer2::Tutorial.
.IP "\(bu" 4
Dancer2 Manual
.Sp
Dancer2::Manual is the reference for Dancer2. Here you will find
information on the concepts of Dancer2 application development and
a comprehensive reference to the Dancer2 domain specific
language.
.IP "\(bu" 4
Dancer2 Keywords
.Sp
The keywords for Dancer2 can be found under \s-1DSL\s0 Keywords.
.IP "\(bu" 4
Dancer2 Deployment
.Sp
For configuration examples of different deployment solutions involving
Dancer2 and Plack, refer to Dancer2::Manual::Deployment.
.IP "\(bu" 4
Dancer2 Cookbook
.Sp
Specific examples of code for real-life problems and some 'tricks' for
applications in Dancer can be found in Dancer2::Cookbook
.IP "\(bu" 4
Dancer2 Config
.Sp
For configuration file details refer to Dancer2::Config. It is a
complete list of all configuration options.
.IP "\(bu" 4
Dancer2 Plugins
.Sp
Refer to Dancer2::Plugins for a partial list of available Dancer2
plugins. Note that although we try to keep this list up to date we
expect plugin authors to tell us about new modules.
.Sp
For information on how to author a plugin, see \*(L"Writing the plugin\*(R" in Dancer2::Plugin.
.IP "\(bu" 4
Dancer2 Migration guide
.Sp
Dancer2::Manual::Migration provides the most up-to-date instruction on
how to convert a Dancer (1) based application to Dancer2.
.PP
\fIOther Documentation\fR
.IX Subsection "Other Documentation"
.IP "\(bu" 4
Git Guide
.Sp
The Git guide describes how to set up your development environment to contribute
to the development of Dancer2, Dancer2's Git workflow, submission guidelines, and
various coding standards.
.IP "\(bu" 4
Deprecation Policy
.Sp
The deprecation policy defines the process for removing old,
broken, unused, or outdated code from the Dancer2 codebase. This policy is critical
for guiding and shaping future development of Dancer2.
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.ie n .SS "my $runner=\fBrunner()\fP;"
.el .SS "my \f(CW$runner\fP=\fBrunner()\fP;"
.IX Subsection "my $runner=runner();"
Returns the current runner. It is of type Dancer2::Core::Runner.
.SH "SECURITY REPORTS"
.IX Header "SECURITY REPORTS"
If you need to report a security vulnerability in Dancer2, send all pertinent
information to <mailto:dancer\-security@dancer.pm>. These matters are taken
extremely seriously, and will be addressed in the earliest timeframe possible.
.SH "SUPPORT"
.IX Header "SUPPORT"
You are welcome to join our mailing list.
For subscription information, mail address and archives see
<http://lists.preshweb.co.uk/mailman/listinfo/dancer\-users>.
.PP
We are also on \s-1IRC:\s0 #dancer on irc.perl.org.
.SH "AUTHORS"
.IX Header "AUTHORS"
.SS "\s-1CORE DEVELOPERS\s0"
.IX Subsection "CORE DEVELOPERS"
.Vb 10
\&    Alberto Simões
\&    Alexis Sukrieh
\&    Damien Krotkine
\&    David Precious
\&    Franck Cuny
\&    Jason A. Crome
\&    Mickey Nasriachi
\&    Peter Mottram (SysPete)
\&    Russell Jenkins
\&    Sawyer X
\&    Stefan Hornburg (Racke)
\&    Steven Humphrey
\&    Yanick Champoux
.Ve
.SS "\s-1CORE DEVELOPERS EMERITUS\s0"
.IX Subsection "CORE DEVELOPERS EMERITUS"
.Vb 1
\&    David Golden
.Ve
.SS "\s-1CONTRIBUTORS\s0"
.IX Subsection "CONTRIBUTORS"
.Vb 10
\&    A. Sinan Unur
\&    Abdullah Diab
\&    Achyut Kumar Panda
\&    Ahmad M. Zawawi
\&    Alex Beamish
\&    Alexander Karelas
\&    Alexander Pankoff
\&    Alexandr Ciornii
\&    Andrew Beverley
\&    Andrew Grangaard
\&    Andrew Inishev
\&    Andrew Solomon
\&    Andy Jack
\&    Ashvini V
\&    B10m
\&    Bas Bloemsaat
\&    baynes
\&    Ben Hutton
\&    Ben Kaufman
\&    biafra
\&    Blabos de Blebe
\&    Breno G. de Oliveira
\&    cdmalon
\&    Celogeek
\&    Cesare Gargano
\&    Charlie Gonzalez
\&    chenchen000
\&    Chi Trinh
\&    Christian Walde
\&    Christopher White
\&    cloveistaken
\&    Colin Kuskie
\&    cym0n
\&    Dale Gallagher
\&    Dan Book (Grinnz)
\&    Daniel Böhmer
\&    Daniel Muey
\&    Daniel Perrett
\&    Dave Jacoby
\&    Dave Webb
\&    David (sbts)
\&    David Steinbrunner
\&    David Zurborg
\&    Davs
\&    Deirdre Moran
\&    Dennis Lichtenthäler
\&    Dinis Rebolo
\&    dtcyganov
\&    Elliot Holden
\&    Erik Smit
\&    Fayland Lam
\&    ferki
\&    Gabor Szabo
\&    geistteufel
\&    Gideon D\*(Aqsouza
\&    Gil Magno
\&    Glenn Fowler
\&    Graham Knop
\&    Gregor Herrmann
\&    Grzegorz Rożniecki
\&    Hobbestigrou
\&    Hunter McMillen
\&    ice\-lenor
\&    Ivan Bessarabov
\&    Ivan Kruglov
\&    JaHIY
\&    Jakob Voss
\&    James Aitken
\&    James Raspass
\&    James McCoy
\&    Jason Lewis
\&    Javier Rojas
\&    Jean Stebens
\&    Jens Rehsack
\&    Joel Berger
\&    Johannes Piehler
\&    Jonathan Cast
\&    Jonathan Scott Duff
\&    Joseph Frazer
\&    Julien Fiegehenn (simbabque)
\&    Julio Fraire
\&    Kaitlyn Parkhurst (SYMKAT)
\&    kbeyazli
\&    Keith Broughton
\&    lbeesley
\&    Lennart Hengstmengel
\&    Ludovic Tolhurst\-Cleaver
\&    Mario Zieschang
\&    Mark A. Stratman
\&    Marketa Wachtlova
\&    Masaaki Saito
\&    Mateu X Hunter
\&    Matt Phillips
\&    Matt S Trout
\&    Maurice
\&    MaxPerl
\&    Ma_Sys.ma
\&    Menno Blom
\&    Michael Kröll
\&    Michał Wojciechowski
\&    Mike Katasonov
\&    Mohammad S Anwar
\&    mokko
\&    Nick Patch
\&    Nick Tonkin
\&    Nigel Gregoire
\&    Nikita K
\&    Nuno Carvalho
\&    Olaf Alders
\&    Olivier Mengué
\&    Omar M. Othman
\&    pants
\&    Patrick Zimmermann
\&    Pau Amma
\&    Paul Clements
\&    Paul Cochrane
\&    Paul Williams
\&    Pedro Bruno
\&    Pedro Melo
\&    Philippe Bricout
\&    Ricardo Signes
\&    Rick Yakubowski
\&    Ruben Amortegui
\&    Sakshee Vijay (sakshee3)
\&    Sam Kington
\&    Samit Badle
\&    Sebastien Deseille (sdeseille)
\&    Sergiy Borodych
\&    Shlomi Fish
\&    Slava Goltser
\&    Snigdha
\&    Steve Dondley
\&    Tatsuhiko Miyagawa
\&    Timothy Alexis Vass
\&    Tina Müller
\&    Tom Hukins
\&    Upasana Shukla
\&    Utkarsh Gupta
\&    Vernon Lyon
\&    Victor Adam
\&    Vince Willems
\&    Vincent Bachelier
\&    xenu
\&    Yves Orton
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Dancer Core Developers
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2022 by Alexis Sukrieh.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
