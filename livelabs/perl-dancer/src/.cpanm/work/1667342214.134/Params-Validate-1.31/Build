#! /opt/rh/rh-perl530/root/usr/bin/perl

use strict;
use Cwd;
use File::Basename;
use File::Spec;

sub magic_number_matches {
  return 0 unless -e '_build/magicnum';
  my $FH;
  open $FH, '<','_build/magicnum' or return 0;
  my $filenum = <$FH>;
  close $FH;
  return $filenum == 333891;
}

my $progname;
my $orig_dir;
BEGIN {
  $^W = 1;  # Use warnings
  $progname = basename($0);
  $orig_dir = Cwd::cwd();
  my $base_dir = '/opt/app-root/src/.cpanm/work/1667342214.134/Params-Validate-1.31';
  if (!magic_number_matches()) {
    unless (chdir($base_dir)) {
      die ("Couldn't chdir($base_dir), aborting\n");
    }
    unless (magic_number_matches()) {
      die ("Configuration seems to be out of date, please re-run 'perl Build.PL' again.\n");
    }
  }
  unshift @INC,
    (
     'inc',
     '/opt/app-root/src/extlib/lib/perl5/5.30.1/x86_64-linux-thread-multi',
     '/opt/app-root/src/extlib/lib/perl5/5.30.1',
     '/opt/app-root/src/extlib/lib/perl5/x86_64-linux-thread-multi',
     '/opt/app-root/src/extlib/lib/perl5'
    );
    if ($INC[-1] ne '.') {
        push @INC, '.';
    }

}

close(*DATA) unless eof(*DATA); # ensure no open handles to this script

use MyMBClass;
Module::Build->VERSION(q{0.4227});

# Some platforms have problems setting $^X in shebang contexts, fix it up here
$^X = Module::Build->find_perl_interpreter;

if (-e 'Build.PL' and not MyMBClass->up_to_date('Build.PL', $progname)) {
   warn "Warning: Build.PL has been altered.  You may need to run 'perl Build.PL' again.\n";
}

# This should have just enough arguments to be able to bootstrap the rest.
my $build = MyMBClass->resume (
  properties => {
    config_dir => '_build',
    orig_dir => $orig_dir,
  },
);

$build->dispatch;
