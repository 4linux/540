.\" Automatically generated by Pod::Man 4.12 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Plack::Middleware::ErrorDocument 3"
.TH Plack::Middleware::ErrorDocument 3 "2022-09-05" "perl v5.30.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Plack::Middleware::ErrorDocument \- Set Error Document based on HTTP status code
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 2
\&  # in app.psgi
\&  use Plack::Builder;
\&
\&  builder {
\&      enable "Plack::Middleware::ErrorDocument",
\&          500 => \*(Aq/uri/errors/500.html\*(Aq, 404 => \*(Aq/uri/errors/404.html\*(Aq,
\&          subrequest => 1;
\&      $app;
\&  };
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Plack::Middleware::ErrorDocument allows you to customize error screen
by setting paths (file system path or \s-1URI\s0 path) of error pages per
status code.
.SH "CONFIGURATIONS"
.IX Header "CONFIGURATIONS"
.IP "subrequest" 4
.IX Item "subrequest"
A boolean flag to serve error pages using a new \s-1GET\s0 sub request.
Defaults to false, which means it serves error pages using file
system path.
.Sp
.Vb 7
\&  builder {
\&      enable "Plack::Middleware::ErrorDocument",
\&          502 => \*(Aq/home/www/htdocs/errors/maint.html\*(Aq;
\&      enable "Plack::Middleware::ErrorDocument",
\&          404 => \*(Aq/static/404.html\*(Aq, 403 => \*(Aq/static/403.html\*(Aq, subrequest => 1;
\&      $app;
\&  };
.Ve
.Sp
This configuration serves 502 error pages from file system directly
assuming that's when you probably maintain database etc. but serves
404 and 403 pages using a sub request so your application can do some
logic there like logging or doing suggestions.
.Sp
When using a subrequest, the subrequest should return a regular '200' response.
.SH "AUTHOR"
.IX Header "AUTHOR"
Tatsuhiko Miyagawa
.SH "SEE ALSO"
.IX Header "SEE ALSO"
