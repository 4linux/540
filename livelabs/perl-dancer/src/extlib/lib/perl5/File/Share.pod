=pod

=for comment
DO NOT EDIT. This Pod was generated by Swim v0.1.48.
See http://github.com/ingydotnet/swim-pm#readme

=encoding utf8

=head1 NAME

File::Share - Extend File::ShareDir to Local Libraries

=for html
<a href="https://travis-ci.org/ingydotnet/file-share-pm"><img src="https://travis-ci.org/ingydotnet/file-share-pm.png" alt="file-share-pm"></a>
<a href="https://coveralls.io/r/ingydotnet/file-share-pm?branch=master"><img src="https://coveralls.io/repos/ingydotnet/file-share-pm/badge.png" alt="file-share-pm"></a>

=head1 SYNOPSIS

    use File::Share ':all';

    my $dir = dist_dir('Foo-Bar');
    my $file = dist_file('Foo-Bar', 'file.txt');

=head1 DESCRIPTION

This module is a dropin replacement for L<File::ShareDir>. It supports the
C<dist_dir> and C<dist_file> functions, except these functions have been
enhanced to understand when the developer's local C<./share/> directory
should be used.

NOTE: module_dist and module_file are not yet supported, because (afaik) there
      is no well known way to populate per-module share files. This may change
      in the future. Please contact me if you know how to do this.

=head1 PROBLEM AND SOLUTION

L<Module::Install> has an C<install_share> directive that allows you to
install various files associated with a distribution. By convention, module
authors always put these in a directory called C<share/>. However,
File::ShareDir can only find files after they have been installed. This can be
problematic when running development tests.

File::Share will look for a local C<share> directory, if it notices that the
module corresponding was loaded from a development path.

L<Devel::Local> gives you an easy way to use a bunch of source repositories as
though their lib and bin directories had already been installed.
C<File::Share> lets you play along with that.

=head1 SEE ALSO

=over

=item * L<File::ShareDir>

=back

=head1 AUTHOR

Ingy döt Net <ingy@cpan.org>

=head1 COPYRIGHT AND LICENSE

Copyright 2011-2014. Ingy döt Net.

This program is free software; you can redistribute it and/or modify it under
the same terms as Perl itself.

See L<http://www.perl.com/perl/misc/Artistic.html>

=cut
