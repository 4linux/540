.\" Automatically generated by Pod::Man 4.12 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Dancer2::Core::HTTP 3"
.TH Dancer2::Core::HTTP 3 "2022-03-14" "perl v5.30.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Dancer2::Core::HTTP \- helper for rendering HTTP status codes for Dancer2
.SH "VERSION"
.IX Header "VERSION"
version 0.400000
.SH "FUNCTIONS"
.IX Header "FUNCTIONS"
.SS "status(status_code)"
.IX Subsection "status(status_code)"
.Vb 1
\&    Dancer2::Core::HTTP\->status(200); # returns 200
\&
\&    Dancer2::Core::HTTP\->status(\*(AqNot Found\*(Aq); # returns 404
\&
\&    Dancer2::Core::HTTP\->status(\*(Aqbad_request\*(Aq); # 400
.Ve
.PP
Returns a \s-1HTTP\s0 status code.  If given an integer, it will return the value it
received, else it will try to find the appropriate alias and return the correct
status.
.SS "status_message(status_code)"
.IX Subsection "status_message(status_code)"
.Vb 1
\&    Dancer2::Core::HTTP\->status_message(200); # returns \*(AqOK\*(Aq
\&
\&    Dancer2::Core::HTTP\->status_message(\*(Aqerror\*(Aq); # returns \*(AqInternal Server Error\*(Aq
.Ve
.PP
Returns the \s-1HTTP\s0 status message for the given status code.
.SS "\fBstatus_mapping()\fP"
.IX Subsection "status_mapping()"
.Vb 2
\&    my %table = Dancer2::Core::HTTP\->status_mapping;
\&    # returns ( \*(AqOk\*(Aq => 200, \*(AqCreated\*(Aq => 201, ... )
.Ve
.PP
Returns the full table of status \-> code mappings.
.SS "\fBcode_mapping()\fP"
.IX Subsection "code_mapping()"
.Vb 2
\&    my %table = Dancer2::Core::HTTP\->code_mapping;
\&    # returns ( 200 => \*(AqOk\*(Aq, 201 => \*(AqCreated\*(Aq, ... )
.Ve
.PP
Returns the full table of code \-> status mappings.
.SS "\fBall_mappings()\fP"
.IX Subsection "all_mappings()"
.Vb 2
\&    my %table = Dancer2::Core::HTTP\->all_mappings;
\&    # returns ( 418 => \*(AqI\*(Aqm a teapot\*(Aq, "I\*(Aqm a teapot\*(Aq => 418, \*(Aqi_m_a_teapot\*(Aq => 418 )
.Ve
.PP
Returns the code-to-status, status-to-code and underscore-groomed status-to-code mappings
all mashed up in a single table. Mostly for internal uses.
.SH "AUTHOR"
.IX Header "AUTHOR"
Dancer Core Developers
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2022 by Alexis Sukrieh.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
