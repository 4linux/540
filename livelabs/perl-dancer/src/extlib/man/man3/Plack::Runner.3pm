.\" Automatically generated by Pod::Man 4.12 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Plack::Runner 3"
.TH Plack::Runner 3 "2022-09-05" "perl v5.30.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Plack::Runner \- plackup core
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&  # Your bootstrap script
\&  use Plack::Runner;
\&  my $app = sub { ... };
\&
\&  my $runner = Plack::Runner\->new;
\&  $runner\->parse_options(@ARGV);
\&  $runner\->run($app);
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Plack::Runner is the core of plackup runner script. You can create
your own frontend to run your application or framework, munge command
line options and pass that to \f(CW\*(C`run\*(C'\fR method of this class.
.PP
\&\f(CW\*(C`run\*(C'\fR method does exactly the same thing as the plackup script
does, but one notable addition is that you can pass a \s-1PSGI\s0 application
code reference directly to the method, rather than via \f(CW\*(C`.psgi\*(C'\fR
file path or with \f(CW\*(C`\-e\*(C'\fR switch. This would be useful if you want to
make an installable \s-1PSGI\s0 application.
.PP
Also, when \f(CW\*(C`\-h\*(C'\fR or \f(CW\*(C`\-\-help\*(C'\fR switch is passed, the usage text is
automatically extracted from your own script using Pod::Usage.
.SH "NOTES"
.IX Header "NOTES"
Do not directly call this module from your \f(CW\*(C`.psgi\*(C'\fR, since that makes
your \s-1PSGI\s0 application unnecessarily depend on plackup and won't run
other backends like Plack::Handler::Apache2 or mod_psgi.
.PP
If you \fIreally\fR want to make your \f(CW\*(C`.psgi\*(C'\fR runnable as a standalone
script, you can do this:
.PP
.Vb 1
\&  my $app = sub { ... };
\&
\&  unless (caller) {
\&      require Plack::Runner;
\&      my $runner = Plack::Runner\->new;
\&      $runner\->parse_options(@ARGV);
\&      $runner\->run($app);
\&      exit 0;
\&  }
\&
\&  return $app;
.Ve
.PP
\&\fB\s-1WARNING\s0\fR: this section used to recommend \f(CW\*(C`if (_\|_FILE_\|_ eq $0)\*(C'\fR but
it's known to be broken since Plack 0.9971, since \f(CW$0\fR is now
\&\fIalways\fR set to the .psgi file path even when you run it from
plackup.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
plackup
