.\" Automatically generated by Pod::Man 4.12 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Template::Plugin::Math 3"
.TH Template::Plugin::Math 3 "2022-07-26" "perl v5.30.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Template::Plugin::Math \- Plugin providing mathematical functions
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    [% USE Math %]
\&
\&    [% Math.sqrt(9) %]
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
The Math plugin provides numerous mathematical functions for use
within templates.
.SH "METHODS"
.IX Header "METHODS"
\&\f(CW\*(C`Template::Plugin::Math\*(C'\fR makes available the following functions from
the Perl core:
.IP "abs" 4
.IX Item "abs"
.PD 0
.IP "atan2" 4
.IX Item "atan2"
.IP "cos" 4
.IX Item "cos"
.IP "exp" 4
.IX Item "exp"
.IP "hex" 4
.IX Item "hex"
.IP "int" 4
.IX Item "int"
.IP "log" 4
.IX Item "log"
.IP "oct" 4
.IX Item "oct"
.IP "rand" 4
.IX Item "rand"
.IP "sin" 4
.IX Item "sin"
.IP "sqrt" 4
.IX Item "sqrt"
.IP "srand" 4
.IX Item "srand"
.PD
.PP
In addition, if the Math::Trig module can be loaded, the following
functions are also available:
.IP "pi" 4
.IX Item "pi"
.PD 0
.IP "tan" 4
.IX Item "tan"
.IP "csc" 4
.IX Item "csc"
.IP "cosec" 4
.IX Item "cosec"
.IP "sec" 4
.IX Item "sec"
.IP "cot" 4
.IX Item "cot"
.IP "cotan" 4
.IX Item "cotan"
.IP "asin" 4
.IX Item "asin"
.IP "acos" 4
.IX Item "acos"
.IP "atan" 4
.IX Item "atan"
.IP "acsc" 4
.IX Item "acsc"
.IP "acosec" 4
.IX Item "acosec"
.IP "asec" 4
.IX Item "asec"
.IP "acot" 4
.IX Item "acot"
.IP "acotan" 4
.IX Item "acotan"
.IP "sinh" 4
.IX Item "sinh"
.IP "cosh" 4
.IX Item "cosh"
.IP "tanh" 4
.IX Item "tanh"
.IP "csch" 4
.IX Item "csch"
.IP "cosech" 4
.IX Item "cosech"
.IP "sech" 4
.IX Item "sech"
.IP "coth" 4
.IX Item "coth"
.IP "cotanh" 4
.IX Item "cotanh"
.IP "asinh" 4
.IX Item "asinh"
.IP "acosh" 4
.IX Item "acosh"
.IP "atanh" 4
.IX Item "atanh"
.IP "acsch" 4
.IX Item "acsch"
.IP "acosech" 4
.IX Item "acosech"
.IP "asech" 4
.IX Item "asech"
.IP "acoth" 4
.IX Item "acoth"
.IP "acotanh" 4
.IX Item "acotanh"
.IP "rad2deg" 4
.IX Item "rad2deg"
.IP "rad2grad" 4
.IX Item "rad2grad"
.IP "deg2rad" 4
.IX Item "deg2rad"
.IP "deg2grad" 4
.IX Item "deg2grad"
.IP "grad2rad" 4
.IX Item "grad2rad"
.IP "grad2deg" 4
.IX Item "grad2deg"
.PD
.PP
If the Math::TrulyRandom module is available, and you've got the time
to wait, the \f(CW\*(C`truly_random_number\*(C'\fR method is available:
.PP
.Vb 1
\&    [% Math.truly_random_number %]
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Andy Wardley <abw@wardley.org> <http://wardley.org/>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (C) 1996\-2022 Andy Wardley.  All Rights Reserved.
.PP
This module is free software; you can redistribute it and/or
modify it under the same terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Template::Plugin
