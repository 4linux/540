.\" Automatically generated by Pod::Man 4.12 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Filesys::Notify::Simple 3"
.TH Filesys::Notify::Simple 3 "2020-01-03" "perl v5.30.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Filesys::Notify::Simple \- Simple and dumb file system watcher
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use Filesys::Notify::Simple;
\&
\&  my $watcher = Filesys::Notify::Simple\->new([ "." ]);
\&  $watcher\->wait(sub {
\&      for my $event (@_) {
\&          $event\->{path} # full path of the file updated
\&      }
\&  });
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Filesys::Notify::Simple is a simple but unified interface to get
notifications of changes to a given filesystem path. It utilizes
inotify2 on Linux, fsevents on \s-1OS X,\s0 kqueue on FreeBSD and
FindFirstChangeNotification on Windows if they're installed, with a
fallback to the full directory scan if they're not available.
.PP
There are some limitations in this module. If you don't like it, use
File::ChangeNotify.
.IP "\(bu" 4
There is no file name based filter. Do it in your own code.
.IP "\(bu" 4
You can not get types of events (created, updated, deleted).
.IP "\(bu" 4
Currently \f(CW\*(C`wait\*(C'\fR method blocks.
.PP
In return, this module doesn't depend on any non-core
modules. Platform specific optimizations with Linux::Inotify2,
Mac::FSEvents, Filesys::Notify::KQueue and Win32::ChangeNotify
are truely optional.
.PP
\&\s-1NOTE:\s0 Using Win32::ChangeNotify may put additional limitations.
.IP "\(bu" 4
Win32::ChangeNotify uses FindFirstChangeNotificationA so that
Unicode characters can not be handled.
On cygwin (1.7 or later), Unicode characters should be able to be handled
when Win32::ChangeNotify is not used.
.IP "\(bu" 4
If more than 64 directories are included under the specified paths,
an error occurrs.
.SH "AUTHOR"
.IX Header "AUTHOR"
Tatsuhiko Miyagawa <miyagawa@bulknews.net>
.SH "LICENSE"
.IX Header "LICENSE"
This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
File::ChangeNotify Mac::FSEvents Linux::Inotify2 Filesys::Notify::KQueue
Win32::ChangeNotify
