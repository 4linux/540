.\" Automatically generated by Pod::Man 4.12 (Pod::Simple 3.40)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.de IX
..
.nr rF 0
.if \n(.g .if rF .nr rF 1
.if (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" ========================================================================
.\"
.IX Title "Dancer2::Core::Role::SessionFactory::File 3"
.TH Dancer2::Core::Role::SessionFactory::File 3 "2022-03-14" "perl v5.30.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
Dancer2::Core::Role::SessionFactory::File \- Role for file\-based session factories
.SH "VERSION"
.IX Header "VERSION"
version 0.400000
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This is a specialized SessionFactory role for storing session
data in files.
.PP
This role manages the files.  Classes consuming it only need to handle
serialization and deserialization.
.PP
Classes consuming this must satisfy three requirements: \f(CW\*(C`_suffix\*(C'\fR,
\&\f(CW\*(C`_freeze_to_handle\*(C'\fR and \f(CW\*(C`_thaw_from_handle\*(C'\fR.
.PP
.Vb 1
\&    package Dancer2::Session::XYX;
\&
\&    use Dancer2::Core::Types;
\&    use Moo;
\&
\&    has _suffix => (
\&        is      => \*(Aqro\*(Aq,
\&        isa     => Str,
\&        default => sub { \*(Aq.xyz\*(Aq },
\&    );
\&
\&    with \*(AqDancer2::Core::Role::SessionFactory::File\*(Aq;
\&
\&    sub _freeze_to_handle {
\&        my ($self, $fh, $data) = @_;
\&
\&        # ... do whatever to get data into $fh
\&
\&        return;
\&    }
\&
\&    sub _thaw_from_handle {
\&        my ($self, $fh) = @_;
\&        my $data;
\&
\&        # ... do whatever to get data from $fh
\&
\&        return $data;
\&    }
\&
\&    1;
.Ve
.SH "ATTRIBUTES"
.IX Header "ATTRIBUTES"
.SS "session_dir"
.IX Subsection "session_dir"
Where to store the session files.  Defaults to \*(L"./sessions\*(R".
.SH "AUTHOR"
.IX Header "AUTHOR"
Dancer Core Developers
.SH "COPYRIGHT AND LICENSE"
.IX Header "COPYRIGHT AND LICENSE"
This software is copyright (c) 2022 by Alexis Sukrieh.
.PP
This is free software; you can redistribute it and/or modify it under
the same terms as the Perl 5 programming language system itself.
