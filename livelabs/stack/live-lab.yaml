version: '3.9'

services:

#  traefik:
#    image: "traefik:2.8"
#    command:
#      - --entrypoints.web.address=:80
#      - --providers.docker=true
#      - --providers.docker.swarmMode=true
#      - --providers.docker.exposedbydefault=false
#      - --api.insecure=true
#      - --log.level=ERROR
#    ports:
#      - "8082:8080"
#      - "80:80"
#    networks:
#      - "weavenet"
#    deploy:
#      mode: replicated
#      replicas: 1
#      placement:
#        constraints: [node.role == manager]
#      restart_policy:
#        condition: on-failure
#        delay: 10s
#    volumes:
#      - "/var/run/docker.sock:/var/run/docker.sock:ro"
  
  redis:
    image: docker.io/bitnami/redis:7.0
    environment:
      REDIS_PASSWORD: "4linux"
      REDIS_DISABLE_COMMANDS: "FLUSHDB,FLUSHALL"
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      restart_policy:
        condition: on-failure
        delay: 10s
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    ports:
      - "6379:6379"
    networks:
      - "live-labs-swarm"
    volumes:
      - "redis-data:/bitnami/redis/data"

  perl-dancer:
    image: "<sua-conta-docker-hub>/dancer-perl:latest"
    environment:
      REDIS_SERVER: "10.128.0.2"
      REDIS_PORT: "6379"
      REDIS_PASSWORD: "4linux"
    deploy:
      mode: replicated
      replicas: 1 
      placement:
        constraints: [node.labels.app == perl-dancer]
#      labels:
#      - "traefik.enable=true"
#      - "traefik.http.routers.dancer-perl.rule=Host(`dancer-perl.34-135-144-254.nip.io`)"
#      - "traefik.http.routers.dancer-perl.entrypoints=web"
#      - "traefik.http.routers.dancer-perl.service=dancer-perl"
#      - "traefik.http.services.dancer-perl.loadbalancer.server.port=8080"
#      - "traefik.docker.network=weavenet"   
      restart_policy:
        condition: on-failure
        delay: 10s
      resources:
        limits:
          memory: 256M
          cpus: '0.3'
    ports:
      - ":8080"
    networks:
      - "live-lab-swarm"
    volumes:
      - "perl-data:/opt"

networks:
  live-labs-swarm:
    external: true

volumes:
  redis-data:
    external: true
  perl-data:
    external: true
